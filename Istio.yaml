global:
  proxy:
    resources:
      limits:
        cpu: ${cpu}
        memory: ${memory_limit}
      requests:
        cpu: ${cpu_request}
        memory: ${memory_request}
  defaultPodDisruptionBudget:
    enabled: ${pod_disruption_budget_enabled}
  logAsJson: ${log_as_json}
  # logging:
  #   level: ${logging_level}
 
pilot:
  autoscaleEnabled: ${pilot_autoscale_enabled}
  autoscaleMin: ${pilot_autoscale_min}
  autoscaleMax: ${pilot_autoscale_max}
  replicaCount: ${pilot_replica_count}
  resources:
    requests:
      cpu: ${pilot_cpu_request}
      memory: ${pilot_memory_request}
    limits:
      cpu: ${pilot_cpu_limit}
      memory: ${pilot_memory_limit}
 
gateways:
  istio-ingressgateway:
    serviceAnnotations:
      service.beta.kubernetes.io/aws-load-balancer-type: ${aws_load_balancer_type}
      service.beta.kubernetes.io/aws-load-balancer-scheme: ${aws_load_balancer_scheme}
      service.beta.kubernetes.io/aws-load-balancer-attributes: ${aws_load_balancer_attributes}
    resources:
      limits:
        cpu: ${ingressgateway_cpu_limit}
        memory: ${ingressgateway_memory_limit}
      requests:
        cpu: ${ingressgateway_cpu_request}
        memory: ${ingressgateway_memory_request}
    rbac:
      enabled: ${ingressgateway_rbac_enabled}
    serviceAccount:
      create: ${ingressgateway_service_account_create}
      name: ${ingressgateway_service_account_name}
 
    autoscaling:
      enabled: ${ingressgateway_autoscaling_enabled}
      minReplicas: ${ingressgateway_autoscaling_min_replicas}
      maxReplicas: ${ingressgateway_autoscaling_max_replicas}
      targetCPUUtilizationPercentage: ${ingressgateway_target_cpu_utilization_percentage}
 
meshConfig:
  defaultConfig:
    holdApplicationUntilProxyStarts: ${hold_application_until_proxy_starts}